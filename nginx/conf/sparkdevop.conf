# Filename: nginx/conf/sparkdevop.conf

# ----------------------------------------------------
# Define Upstream Groups for Load Balancing
# Docker Swarm's built-in DNS will resolve service names
# to the virtual IPs of the service's containers.
# ----------------------------------------------------

upstream api_gateway {
    server api-gateway:3000;
}

upstream container_app {
    # Main shell application, usually runs on port 3000
    server container-app:3000;
}

upstream pos_mfe {
    # Point of Sale micro-frontend, usually runs on port 3001
    server pos-mfe:3001;
}

upstream dashboard_mfe {
    # Dashboard micro-frontend, usually runs on port 3002
    server dashboard-mfe:3002;
}

upstream employees_mfe {
    # Employees micro-frontend, usually runs on port 3003
    server employees-mfe:3003;
}

# ----------------------------------------------------
# Server Block: HTTP to HTTPS Redirect
# ----------------------------------------------------
server {
    listen 80;
    server_name sparkdevop.com;

    # Log redirects
    access_log /var/log/nginx/redirect.log;
    error_log /var/log/nginx/redirect.error.log;

    # Permanent redirect to the HTTPS version of the site
    return 301 https://$host$request_uri;
}

# ----------------------------------------------------
# Server Block: Main HTTPS Configuration
# ----------------------------------------------------
server {
    listen 443 ssl http2;
    server_name sparkdevop.com;

    # SSL Certificate Configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    # Add other SSL best practices here (ciphers, protocols, etc.)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256';

    # Default location serves the main container app (the shell)
    location / {
        proxy_pass http://container_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Location for API calls, routed to the API Gateway
    location /api/ {
        # Strip the /api prefix before forwarding to the gateway
        rewrite ^/api/(.*)$ /$1 break;
        proxy_pass http://api_gateway;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # --- Micro-Frontend Asset Routing ---
    # These locations must match the URLs you configure in your
    # container app's Webpack Module Federation remotes config.
    # Example: 'pos: "pos@https://sparkdevop.com/pos/remoteEntry.js"'
    
    location /pos/ {
        rewrite ^/pos/(.*)$ /$1 break;
        proxy_pass http://pos_mfe;
        proxy_set_header Host $host;
    }

    location /dashboard/ {
        rewrite ^/dashboard/(.*)$ /$1 break;
        proxy_pass http://dashboard_mfe;
        proxy_set_header Host $host;
    }
    
    location /employees/ {
        rewrite ^/employees/(.*)$ /$1 break;
        proxy_pass http://employees_mfe;
        proxy_set_header Host $host;
    }
}