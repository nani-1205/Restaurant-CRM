upstream frontend_app {
    server frontend-shell:80; # Swarm DNS will resolve this
}

upstream api_gateway {
    server gateway:3000;
}

server {
    listen 80;
    server_name sparkdevop.com;
    # Redirect HTTP to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name sparkdevop.com;

    # SSL Certs - use Let's Encrypt / Certbot
    ssl_certificate /etc/letsencrypt/live/sparkdevop.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sparkdevop.com/privkey.pem;

    # Route API calls to the gateway
    location /api/ {
        proxy_pass http://api_gateway;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Serve the main shell application
    location / {
        proxy_pass http://frontend_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Serve the remoteEntry files for Micro-Frontends
    # This is a simplified example. A better approach might be to serve all MFEs from a single Nginx instance or CDN.
    location /dashboard/remoteEntry.js {
        # This needs to point to where the dashboard MFE static files are served from
        # For simplicity, you might have the shell app proxy this or have Nginx serve it directly
    }
}